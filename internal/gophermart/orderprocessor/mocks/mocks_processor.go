// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// processor is an autogenerated mock type for the processor type
type processor struct {
	mock.Mock
}

// GetUnfinishedOrders provides a mock function with given fields:
func (_m *processor) GetUnfinishedOrders() (map[string]string, error) {
	ret := _m.Called()

	var r0 map[string]string
	var r1 error
	if rf, ok := ret.Get(0).(func() (map[string]string, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() map[string]string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]string)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateOrderStatus provides a mock function with given fields: order, status, accrual
func (_m *processor) UpdateOrderStatus(order string, status string, accrual float64) error {
	ret := _m.Called(order, status, accrual)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, float64) error); ok {
		r0 = rf(order, status, accrual)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewProcessor interface {
	mock.TestingT
	Cleanup(func())
}

// newProcessor creates a new instance of processor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newProcessor(t mockConstructorTestingTnewProcessor) *processor {
	mock := &processor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
